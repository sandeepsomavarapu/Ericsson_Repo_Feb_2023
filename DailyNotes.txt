Language :
==========
	English--->communication with humans
	
Programming Languages:
=======================
	communication with machines 


		
	Programming Languages
			POP 					OOP   oops
B,C,BCPl,Photon,CObol...		C++,python,java,.net....


				1)Performance		inheritance,polymorphisam
				2)Security			encapsulation,abstraction



Why JAVA?
		1995   jdk beta  
		
		2014	jdk 8/ 1.8
		
		jdk 19   James gosling  sun micro system --->Oracle 


https://www.javatpoint.com/javafx-how-to-install-java


1)Platform Independent

2)Garbage Collection   garbage collector 



 JAVA PI Language
 
		WORA
		
	Welcome.java  							.net(microsoft)



		
machine 1		machine2				machine1		machine 2
windows11 		linux					windows11		mac os
64					
i7



53 keywords ---lowercase 

welcome to java 

Welcome.java

class 

Identifiers:
===========
Any name in java 
classname ,variable,method namemobj name,interface name 


a-z
A-Z
0-9
$
_


variables
-----------
		sandeep trainer--994994949

syntax:

	datatype  varname=value;
	
	8 PDT
	
	byte	1 byte			-128 to 127
	short	2 bytes			-32768 to 32767
	int		4 bytes			-2147483648 to 2147483647
	long	8 bytes 		-2 power 64-1   			long	age=35;long contact=94949949444
	
	float	4 bytes				98.5434534535487
	double	8 bytes		

	boolean 1 bit  true(1)/false(0) 
	char 	2 bytes	'M' / 'F'
	
	
	2 types of variables
	
		local variable (inside a method)
		global variable (define outside method with in the class )

IDE-->eclipse,my eclipse,intellji,vscode,......
		Eclipse IDE for Enterprise Java and Web Developers

											Java
					JSE 						JEE 							 			JME				
			corejava,awt,swings,applets		SERVLETS,JSP,JSF,EJB,SPRING,webservices	...		ANDROID		

APPLICATIONS:
=============
1)STANDALONE / DESKTOP APPLICATIONS    ECLIPSE,VLS MEDIA PALYER,ANTI VIRUS...

2)WEB APPLICATIONS   				 GMAIL,FB,INSTA,AMAZON.....urls

3)DISTRIBUTED APPLICATIONS				banking ,atm,phonepe

4)MOBILE APPLICATIONS			



Instance and Static :
=====================

1)syntax
	static int countryCode=91;//static variable
			int empId=1231;		//instnace variable

2)Memory

		static variables will get memory space ONLY ONCE at the time  .class loading into JVM

		instance variables will get memory for EVERY OBJECT creation
		
			object creation-->memory creation
			
			classname objname=new classname();
		
3)Access
		static variable can be accessed by using classname 	
		instance variable can be accessed by using objref

4)context 
		unique data use instance
		common data use static 
		
Methods:
=========

m1{
10
}
					void,int -->return 123;

accessmodifier static/instance  returntype methodname(datatype varname,.....) //method signature
{
//method body

}

public static void main(String args[])
{
/...
////
...

}

flow control:
==============
	if
	
	else
	
	
	for
	
	while
	 dowhile
	 switch 
















operators 
....









